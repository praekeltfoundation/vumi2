[tool.poetry]
name = "vumi2"
version = "0.0.1"
description = "Vumi, but with Python3 and Trio async"
authors = ["Praekelt.org <dev@praekelt.org>"]
license = "BSD 3-Clause"
readme = "README.md"
repository = "https://github.com/praekeltfoundation/vumi2"
packages = [
    { include = "vumi2", from = "src" }
]
include = [
    { path = "tests", format = "sdist" }
]

[tool.poetry.dependencies]
python = "^3.8"
trio = "^0.22.0"
async-amqp = "^0.5.0"
attrs = "^23.1.0"
cattrs = "^22.2.0"
PyYAML = "^6.0"
sentry-sdk = "^1.9.3"
quart-trio = "^0.10.0"
hypercorn = "^0.14.3"
"smpp.pdu3" = "^0.6"

[tool.poetry.group.dev.dependencies]
black = "^23.3.0"
mypy = "^1.2.0"
pytest = "^7.3.1"
pytest-trio = "^0.8.0"
pytest-cov = "^4.0.0"
ruff = "^0.0.261"
Sphinx = "^6.1.3"

[tool.poetry.scripts]
vumi2 = "vumi2.cli:main"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
preview = true

[tool.mypy]
ignore_missing_imports = true

[tool.pytest.ini_options]
trio_mode = true
addopts = "--cov=src"
filterwarnings = [
    # We can't do anything about these warnings until upstream updates.
    "ignore::trio.TrioDeprecationWarning:quart_trio.app",
    "ignore::trio.TrioDeprecationWarning:anyio._backends._trio",
]

[tool.ruff]
select = [
    "E", "F", "W", # pycodestyle + pyflakes == flake8 - mccabe
    "I",           # isort
    "B",           # flake8-bugbear
    "UP",          # pyupgrade
    "S",           # flake8-bandit
    "C4",          # flake8-comprehensions
    "PIE",         # flake8-pie
    "SIM",         # flake8-simplify
    "PTH",         # flake8-use-pathlib
]
target-version = "py38"

[tool.ruff.isort]
known-first-party = ["vumi2"]

[tool.ruff.per-file-ignores]
"tests/**" = [
    "S101",  # It's okay to use `assert` in tests.
]
